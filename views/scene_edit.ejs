<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/grid.css" rel="stylesheet">
    <script src="/js/jquery-3.3.1.min.js"></script>
    <title>编辑场景-
        <%=scene.SceneName%>
    </title>
</head>

<body>


    <div class="container">

        <h1 id="test">编辑场景</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/scene/admin">场景</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    <%=scene.SceneName%>
                </li>
            </ol>
        </nav>


        <hr/>
        <h2>基础信息</h2>
        <form class="needs-validation" novalidate="">

            <div class="mb-3">
                <label for="username">场景名称</label>
                <div class="input-group">
                    <input type="text" class="form-control" id="scenename" name="scenename" placeholder="场景名称" value="<%=scene.SceneName%>" required="">
                    <div class="invalid-feedback" style="width: 100%;">
                        必须填写场景名称.
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="address">场景描述</label>
                <textarea type="text" class="form-control" id="description" name="description" placeholder="场景描述" rows=5 required="">
                    <%=scene.Description%>
                </textarea>
                <div class="invalid-feedback">
                    必须填写场景描述.
                </div>
            </div>

            <div class="mb-3">
                <label>创建时间(只读)</label>
                <input class="form-control" type="text" id="createTime" value="<%=scene.CreateTime%>" readonly>
            </div>
            <div class="mb-3">
                <label>修改时间(只读)</label>
                <input class="form-control" type="text" id="updateTime" value="<%=scene.UpdateTime%>" readonly>
            </div>

            <div class="mb-3">
                <label>提示语音(填写音频文件名称)</label>
                <input class="form-control" type="text" id="beginAudio" value="<%=scene.BeginAudio%>">
            </div>
            <button id="submitBasicInfo" type="button" class="btn btn-primary btn-lg btn-block">提交基础信息</button>



            <hr/>
            <h2>准备阶段信息</h2>
            <div class="mb-3">
                <label>时间限定(单位:秒)</label>
                <input class="form-control" id="prepare_timeLimit" type="text" value="<%=scene.Preparation.TimeLimit%>">
            </div>
            <div class="mb-3">
                <label>分值权重</label>
                <input class="form-control" id="prepare_score" type="text" value="<%=scene.Preparation.ScoreWeight%>">
            </div>

            <h3 name="actions">涉及到的操作</h3>
            <div class="input-group mb-3">
                <input type="text" class="form-control" id="addActionInvolved" placeholder="新增操作" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" id="addActionInvolvedButton" type="button" onclick="AddAction()">添加</button>
                </div>
            </div>
            <ul class="list-group" id="actionsInvolved">

            </ul>

            <button id="SubmitPreparation" type="button" class="btn btn-primary btn-lg btn-block">提交准备阶段信息</button>

            <hr/>
            <h2>场景流程信息</h2>
            <div class="mb-3">
                <label>流程</label>
                <input class="form-control" id="prepare_timeLimit" type="text" value="<%=scene.Preparation.TimeLimit%>">
            </div>
        </form>



    </div>
    </div>
    <!-- /container -->

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">信息</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    操作成功！
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" name="sceneID" id="sceneID" value="<%=scene._id%>">

    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/lodash.js"></script>

    <script>
        var sceneID = $("#sceneID").val();

        $(document).ready(function () {
            $("#SubmitPreparation").click(function () {
                SubmitPreparation(sceneID);
            });
            $("#submitBasicInfo").click(function () {
                SubmitBasicInfo(sceneID);
            });
        });

        //刷新涉及到的操作
        function RefreshActionsInvoled(id) {
            $.get("/scene/" + id, function (result) {

                //防止和后端模板冲突
                _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;

                var actions = result.Preparation.ActionsInvolved;
                var compiled = _.template(
                    '<li class="list-group-item"><a href="#actions" onclick="DeleteAction(this)" class="badge badge-danger">X</a>&nbsp;&nbsp;<span>{{item}}</span></li>'
                );

                //先清空
                $("#actionsInvolved").html("");

                //再逐个添加
                for (let i = 0; i < actions.length; i++) {
                    $("#actionsInvolved").append(
                        compiled({
                            'item': actions[i]
                        })
                    );
                }
            });
        };

        //初始化涉及到的操作
        RefreshActionsInvoled(sceneID);

        //增加一个涉及到的操作
        function AddAction() {
            var newActionStr = $("#addActionInvolved").val();
            var item =
                '<li class="list-group-item"><a href="#actions" onclick="DeleteAction(this)" class="badge badge-danger">X</a>&nbsp;&nbsp;<span>' +
                newActionStr + '</span></li>'
            $("#actionsInvolved").append(item);
            $("#addActionInvolved").val("");
        };

        //删除一个涉及到的操作(不真正提交数据库)
        function DeleteAction(item) {
            $(item).parent().remove();
        };

        //提交基本信息
        function SubmitBasicInfo(id) {
            var sceneName = $("#scenename").val();
            var des = $("#description").val();
            var beginaudio = $("#beginAudio").val();
            $.ajax({
                url: "/scene/" + id,
                type: "PUT",
                dataType: "text",
                data: JSON.stringify({
                    "SceneName": sceneName,
                    "Description": des,
                    "BeginAudio": beginaudio
                }),
                headers: {
                    'Content-Type': 'application/json'
                },
                success: function (res, status) {
                    $("#exampleModal").modal('show');
                }
            });
        };

        //提交准备
        function SubmitPreparation(id) {
            var timeLimit = $("#prepare_timeLimit").val();
            var score = $("#prepare_score").val();
            var actions = [];

            for (let i = 0, count = $("#actionsInvolved").children().length; i < count; i++) {
                actions.push($("#actionsInvolved li:eq(" + i + ") span").html());
            }

            $.ajax({
                url: "/scene/preparation/" + id,
                type: "PUT",
                dataType: "text",
                data: JSON.stringify({
                    "TimeLimit": timeLimit,
                    "ScoreWeight": score,
                    "ActionsInvolved": actions
                }),
                headers: {
                    'Content-Type': 'application/json'
                },
                success: function (res, status) {
                    RefreshActionsInvoled(sceneID);
                    $("#exampleModal").modal('show');
                }
            })
        };





        //Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';

            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');

                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('click', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
</body>

</html>